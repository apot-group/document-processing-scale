version: '3.8'

services:

  namenode: # NameNode
    image: duynguyenngoc/dps-hadoop-namenode:3.3.1
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode: # DataNode
    image: duynguyenngoc/dps-hadoop-datanode:3.3.1
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env

  resourcemanager: # ResourceManager
    image: duynguyenngoc/dps-hadoop-resourcemanager:3.3.1
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager: # NodeManager
    image: duynguyenngoc/dps-hadoop-nodemanager:3.3.1
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  historyserver: # HistoryServer
    image: duynguyenngoc/dps-hadoop-historyserver:3.3.1
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env


  zookeeper: # ZooKeeper
    image: confluentinc/cp-zookeeper:5.2.0
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    extra_hosts:
      - "moby:127.0.0.1"
  

  kafka: # Kafka
    image: confluentinc/cp-kafka:5.2.0
    hostname: kafka
    container_name: kafka
    restart: always
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    extra_hosts:
      - "moby:127.0.0.1"
  

  spark-master: # SparkMaster
    image: duynguyenngoc/dps-hadoop-spark:3.3.1
    container_name: spark-master
    restart: always
    volumes:
      - dps-spark-apps:/opt/spark-apps
      - dps-spark-data:/opt/spark-data
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_LOCAL_IP=spark-master
      - SPARK_WORKLOAD=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

  
  spark-worker-a: # SparkWorkerA
    image: duynguyenngoc/dps-hadoop-spark:3.3.1
    ports:
      - "8081:8080"
      - "7001:7000"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker-a
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - dps-spark-apps:/opt/spark-apps
      - dps-spark-data:/opt/spark-data

  
  jypyter: # JupyterLab
    image: jupyter/pyspark-notebook
    container_name: jupyter
    restart: always
    ports:
      - 8888:8888

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  dps-spark-apps:
  dps-spark-data:
